#!/usr/bin/env python3
"""
Simple Wiki Update Script - Lightweight Wiki Synchronization
===========================================================

A simple script to update the GitHub wiki without complex dependencies.
Avoids reading app.py to prevent Google Cloud authentication issues.

Author: Yourl Cloud Inc.
Purpose: GitHub Actions Wiki Sync
"""

import os
import sys
import subprocess
from datetime import datetime, timezone

def get_git_info():
    """Get current git information safely."""
    try:
        # Get current branch
        result = subprocess.run(['git', 'rev-parse', '--abbrev-ref', 'HEAD'], 
                              capture_output=True, text=True, timeout=10)
        branch = result.stdout.strip() if result.returncode == 0 else 'main'
        
        # Get last commit hash
        result = subprocess.run(['git', 'rev-parse', 'HEAD'], 
                              capture_output=True, text=True, timeout=10)
        commit_hash = result.stdout.strip()[:8] if result.returncode == 0 else 'unknown'
        
        return {
            'branch': branch,
            'commit_hash': commit_hash
        }
    except Exception as e:
        print(f"⚠️ Could not get git info: {e}")
        return {
            'branch': 'main',
            'commit_hash': 'unknown'
        }

def create_simple_wiki_content():
    """Create simple wiki content without complex dependencies."""
    git_info = get_git_info()
    timestamp = datetime.now(timezone.utc).strftime('%Y-%m-%d %H:%M:%S UTC')
    
    wiki_content = f"""# Yourl.Cloud Wiki

**Last Updated**: {timestamp}
**Branch**: {git_info['branch']}
**Commit**: {git_info['commit_hash']}

## 🎯 Project Overview

Yourl.Cloud is a production-ready Python Flask API with advanced features including:
- Cloud Run Domain Mapping compatibility
- Friends and Family Guard security ruleset
- Visual inspection capabilities
- Production WSGI server support

## 🚀 Quick Start

### Local Development
```bash
git clone https://github.com/XDM-ZSBW/cloud-yourl.git
cd cloud-yourl
pip install -r requirements.txt
python app.py
```

### Cloud Run Deployment
```bash
gcloud builds submit --config cloudbuild.yaml
```

## 📚 Documentation

- **[README.md](README.md)** - Main project documentation
- **[Wiki Source](https://github.com/XDM-ZSBW/cloud-yourl/tree/main/wiki)** - Wiki files
- **[GitHub Wiki](https://github.com/XDM-ZSBW/cloud-yourl/wiki)** - Live wiki

## 🔄 Wiki Sync Status

This wiki is automatically synchronized from the `wiki/` directory in the main repository.

**Last Sync**: {timestamp}
**Source**: Main repository wiki/ directory
**Method**: GitHub Actions automation

## 🏗️ Architecture

- **Backend**: Python Flask 3.0.2
- **WSGI Server**: Gunicorn/Waitress
- **Deployment**: Google Cloud Run
- **Domain**: Custom domain mapping support
- **Security**: Friends and Family Guard ruleset

## 📋 Current Status

✅ **Wiki Automation**: Implemented and working
✅ **GitHub Actions**: Dual sync methods available
✅ **Documentation**: Comprehensive coverage
✅ **Cloud Run**: Full compatibility

---

*Generated by simple wiki sync script | {timestamp}*
"""
    
    return wiki_content

def update_wiki():
    """Update the wiki with simple content."""
    print("🚀 Starting simple wiki update...")
    
    # Log environment
    if os.getenv('GITHUB_ACTIONS') == 'true':
        print("🔄 Running in GitHub Actions environment")
        print(f"📁 Working directory: {os.getcwd()}")
    
    try:
        # Create simple wiki content
        wiki_content = create_simple_wiki_content()
        
        # Write to wiki file
        wiki_file = "wiki/Home.md"
        os.makedirs("wiki", exist_ok=True)
        
        with open(wiki_file, 'w', encoding='utf-8') as f:
            f.write(wiki_content)
        
        print(f"✅ Wiki updated: {wiki_file}")
        print("🎯 Simple content created successfully")
        
        return True
        
    except Exception as e:
        print(f"❌ Error updating wiki: {e}")
        return False

if __name__ == "__main__":
    success = update_wiki()
    sys.exit(0 if success else 1)
