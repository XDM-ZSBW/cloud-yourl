@echo off
REM Security Scanning Script for Yourl.Cloud Docker Images (Windows)
REM Author: Yourl Cloud Inc.
REM Reference Code: 38f26aee-4e52-484e-bbc8-d973ca0bcb10

setlocal enabledelayedexpansion

REM Configuration
set IMAGE_NAME=yourl-cloud
set IMAGE_TAG=latest
set FULL_IMAGE_NAME=%IMAGE_NAME%:%IMAGE_TAG%
set SCAN_RESULTS_DIR=.\security-scan-results
set DATE=%date:~-4,4%%date:~-10,2%%date:~-7,2%_%time:~0,2%%time:~3,2%%time:~6,2%
set DATE=%DATE: =0%

echo üîí Yourl.Cloud Security Scanner
echo ================================
echo.

REM Create results directory
if not exist "%SCAN_RESULTS_DIR%" mkdir "%SCAN_RESULTS_DIR%"

REM Check if Docker is running
docker info >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Docker is not running. Please start Docker and try again.
    exit /b 1
)

REM Check if image exists
docker image inspect "%FULL_IMAGE_NAME%" >nul 2>&1
if errorlevel 1 (
    echo ‚ö†Ô∏è  Image %FULL_IMAGE_NAME% not found. Building image first...
    docker build -t "%FULL_IMAGE_NAME%" .
)

echo ‚ÑπÔ∏è  Starting security scan for %FULL_IMAGE_NAME%

REM 1. Docker built-in scanner
echo ‚ÑπÔ∏è  Running Docker built-in vulnerability scan...
docker scan --json "%FULL_IMAGE_NAME%" > "%SCAN_RESULTS_DIR%\docker-scan-%DATE%.json" 2>nul
if errorlevel 1 (
    echo ‚ö†Ô∏è  Docker scan failed or not available. Skipping...
)

REM 2. Check for Trivy
where trivy >nul 2>&1
if not errorlevel 1 (
    echo ‚ÑπÔ∏è  Running Trivy vulnerability scan...
    trivy image --format json --output "%SCAN_RESULTS_DIR%\trivy-scan-%DATE%.json" "%FULL_IMAGE_NAME%"
    if errorlevel 1 (
        echo ‚ö†Ô∏è  Trivy scan failed. Skipping...
    )
) else (
    echo ‚ö†Ô∏è  Trivy not installed. Install with: choco install trivy (Windows) or follow https://aquasecurity.github.io/trivy/latest/getting-started/installation/
)

REM 3. Check for Snyk
where snyk >nul 2>&1
if not errorlevel 1 (
    echo ‚ÑπÔ∏è  Running Snyk container scan...
    snyk container test "%FULL_IMAGE_NAME%" --json > "%SCAN_RESULTS_DIR%\snyk-scan-%DATE%.json" 2>nul
    if errorlevel 1 (
        echo ‚ö†Ô∏è  Snyk scan failed. Skipping...
    )
) else (
    echo ‚ö†Ô∏è  Snyk not installed. Install with: npm install -g snyk
)

REM 4. Container runtime security checks
echo ‚ÑπÔ∏è  Running container runtime security checks...

REM Check if container runs as non-root
docker run --rm --entrypoint id "%FULL_IMAGE_NAME%" > temp-container-user.txt 2>nul
findstr "uid=0" temp-container-user.txt >nul
if not errorlevel 1 (
    echo ‚ö†Ô∏è  Container is running as root user
) else (
    echo ‚úÖ Container is running as non-root user
)

REM Check exposed ports
for /f "tokens=*" %%i in ('docker image inspect "%FULL_IMAGE_NAME%" --format^="{{range $k, $v := .Config.ExposedPorts}}{{$k}} {{end}}"') do set EXPOSED_PORTS=%%i
if defined EXPOSED_PORTS (
    echo ‚ÑπÔ∏è  Exposed ports: %EXPOSED_PORTS%
) else (
    echo ‚ö†Ô∏è  No ports exposed in image
)

REM 5. Generate security report
echo ‚ÑπÔ∏è  Generating security report...

(
echo # Security Scan Report - %DATE%
echo.
echo ## Image Information
echo - **Image**: %FULL_IMAGE_NAME%
echo - **Scan Date**: %date% %time%
echo - **Scanner Version**: 
docker --version
echo.
echo ## Scan Results
echo.
echo ### Docker Built-in Scanner
echo ```json
if exist "%SCAN_RESULTS_DIR%\docker-scan-%DATE%.json" (
    type "%SCAN_RESULTS_DIR%\docker-scan-%DATE%.json"
) else (
    echo Scan not available
)
echo ```
echo.
echo ### Trivy Scanner
echo ```json
if exist "%SCAN_RESULTS_DIR%\trivy-scan-%DATE%.json" (
    type "%SCAN_RESULTS_DIR%\trivy-scan-%DATE%.json"
) else (
    echo Scan not available
)
echo ```
echo.
echo ### Snyk Scanner
echo ```json
if exist "%SCAN_RESULTS_DIR%\snyk-scan-%DATE%.json" (
    type "%SCAN_RESULTS_DIR%\snyk-scan-%DATE%.json"
) else (
    echo Scan not available
)
echo ```
echo.
echo ## Recommendations
echo.
echo 1. **Regular Updates**: Update base image and dependencies regularly
echo 2. **Vulnerability Monitoring**: Set up automated vulnerability scanning
echo 3. **Security Patching**: Apply security patches promptly
echo 4. **Access Control**: Ensure proper user permissions and access controls
echo.
echo ## Contact Information
echo.
echo - **Security Team**: security@yourl.cloud
echo - **Reference Code**: 38f26aee-4e52-484e-bbc8-d973ca0bcb10
echo - **Response Time**: 48 hours for initial response
echo.
echo ---
echo *Generated by Yourl.Cloud Security Scanner*
) > "%SCAN_RESULTS_DIR%\security-report-%DATE%.md"

echo ‚úÖ Security scan completed. Results saved to %SCAN_RESULTS_DIR%\

REM 6. Display summary
echo.
echo üìä Security Scan Summary
echo ========================
echo.

if exist "%SCAN_RESULTS_DIR%\docker-scan-%DATE%.json" (
    findstr /c:"vulnerability" "%SCAN_RESULTS_DIR%\docker-scan-%DATE%.json" >nul 2>&1
    if not errorlevel 1 (
        for /f %%i in ('findstr /c:"vulnerability" "%SCAN_RESULTS_DIR%\docker-scan-%DATE%.json" ^| find /c /v ""') do set VULNERABILITIES=%%i
        echo ‚ÑπÔ∏è  Docker scan found %VULNERABILITIES% potential vulnerabilities
    ) else (
        echo ‚ÑπÔ∏è  Docker scan found 0 potential vulnerabilities
    )
)

if exist "%SCAN_RESULTS_DIR%\trivy-scan-%DATE%.json" (
    findstr /c:"VulnerabilityID" "%SCAN_RESULTS_DIR%\trivy-scan-%DATE%.json" >nul 2>&1
    if not errorlevel 1 (
        for /f %%i in ('findstr /c:"VulnerabilityID" "%SCAN_RESULTS_DIR%\trivy-scan-%DATE%.json" ^| find /c /v ""') do set VULNERABILITIES=%%i
        echo ‚ÑπÔ∏è  Trivy scan found %VULNERABILITIES% potential vulnerabilities
    ) else (
        echo ‚ÑπÔ∏è  Trivy scan found 0 potential vulnerabilities
    )
)

echo ‚úÖ Security scan report generated: %SCAN_RESULTS_DIR%\security-report-%DATE%.md

REM Cleanup
if exist temp-container-user.txt del temp-container-user.txt

echo.
echo ‚ÑπÔ∏è  For detailed analysis, review the generated reports in %SCAN_RESULTS_DIR%\
echo ‚ÑπÔ∏è  For security issues, contact: security@yourl.cloud

pause
