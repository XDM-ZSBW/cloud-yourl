name: Sync Wiki from /wiki
on:
  push:
    branches: [ "main" ]
    paths:
      - "wiki/**"
      - ".github/workflows/sync-wiki.yml"
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for better git operations

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Check if wiki repo exists
        id: check-wiki
        run: |
          echo "🔍 Checking if wiki repository exists..."
          if curl -s -o /dev/null -w "%{http_code}" "https://github.com/${{ github.repository }}.wiki" | grep -q "200"; then
            echo "✅ Wiki repository exists"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Wiki repository does not exist - creating it"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create wiki repo if it doesn't exist
        if: steps.check-wiki.outputs.exists == 'false'
        run: |
          echo "🚀 Creating wiki repository..."
          
          # Create a new directory for the wiki repo
          mkdir -p wiki-repo
          cd wiki-repo
          
          # Set default branch to main before init
          git config --global init.defaultBranch main
          
          # Initialize git repository
          git init
          git remote add origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.wiki.git"
          
          # Create a simple README.md to initialize the wiki
          echo "# Welcome to Yourl.Cloud Wiki" > README.md
          echo "" >> README.md
          echo "This wiki is automatically synchronized from the main repository." >> README.md
          
          # Add, commit and push to main branch (GitHub Wikis use main by default)
          git add README.md
          git commit -m "Initial wiki setup"
          git push -u origin main
          
          echo "✅ Wiki repository created successfully"
          cd ..

      - name: Clone wiki repo
        if: steps.check-wiki.outputs.exists == 'true'
        run: |
          set -e
          echo "🔄 Cloning wiki repository..."
          git clone "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.wiki.git" wiki-repo
          echo "✅ Wiki repository cloned successfully"

      - name: Sync files from /wiki to wiki repo
        run: |
          set -e
          echo "🔄 Syncing files from /wiki to wiki repository..."
          echo "📁 Source directory contents:"
          ls -la wiki/
          echo ""
          
          if [ -d "wiki-repo" ]; then
            echo "📁 Target directory contents (before sync):"
            ls -la wiki-repo/
            echo ""
            
            # Sync files with deletion support
            rsync -av --delete wiki/ wiki-repo/
            echo "✅ Files synced successfully"
            
            cd wiki-repo
            echo "🔍 Checking for changes..."
            if [ -n "$(git status --porcelain)" ]; then
              echo "📝 Changes detected, preparing to commit and push..."
              
              # Try to pull latest changes first to avoid conflicts
              echo "🔄 Pulling latest changes from remote..."
              if git pull origin main --no-edit 2>/dev/null; then
                echo "✅ Successfully pulled latest changes"
              else
                echo "ℹ️ No remote changes to pull or pull failed (continuing...)"
              fi
              
              # Add and commit changes
              git add -A
              git commit -m "chore(wiki): sync from /wiki @ ${{ github.sha }}"
              
              # Try to push to main branch
              echo "🚀 Pushing changes to wiki repository..."
              if git push origin main 2>/dev/null; then
                echo "✅ Wiki updated successfully (pushed to main branch)"
              else
                # If push fails, try to force push (this will overwrite remote changes)
                echo "⚠️ Regular push failed, attempting force push..."
                if git push --force-with-lease origin main 2>/dev/null; then
                  echo "✅ Wiki updated successfully (force pushed to main branch)"
                else
                  echo "❌ Failed to push changes to wiki repository"
                  exit 1
                fi
              fi
            else
              echo "ℹ️ No changes to commit."
            fi
          else
            echo "📁 Creating wiki repository structure..."
            mkdir -p wiki-repo
            cp -r wiki/* wiki-repo/
            cd wiki-repo
            git init
            git add -A
            git commit -m "Initial wiki sync from /wiki @ ${{ github.sha }}"
            git branch -M main
            git remote add origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.wiki.git"
            git push -u origin main
            echo "✅ Wiki repository created and synced successfully"
          fi

      - name: Verify sync
        run: |
          echo "🔍 Verifying wiki sync..."
          if [ -d "wiki-repo" ]; then
            cd wiki-repo
            echo "📁 Current wiki contents:"
            ls -la
            echo ""
            echo "📋 Git log (last 3 commits):"
            git log --oneline -3
            echo ""
            echo "🌿 Current branch:"
            git branch -a
          fi
          echo "✅ Wiki sync verification complete"

      - name: Handle errors gracefully
        if: failure()
        run: |
          echo "❌ Wiki sync failed - checking for common issues..."
          echo "📋 Repository: ${{ github.repository }}"
          echo "🔑 Token available: ${{ secrets.GITHUB_TOKEN != '' }}"
          echo "📁 Wiki directory exists: ${{ steps.check-wiki.outputs.exists }}"
          echo "🔄 Check GitHub Actions logs for detailed error information"
