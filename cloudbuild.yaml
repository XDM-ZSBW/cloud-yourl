# Service account to use for builds
serviceAccount: 'projects/$PROJECT_ID/serviceAccounts/automation-sa-yourl@$PROJECT_ID.iam.gserviceaccount.com'

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  env:
    - 'GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
    - 'NOTIFICATION_EMAIL=bcherrman@gmail.com'
    - 'DEPLOY_REGION=us-west1'

steps:
  # Generate marketing codes for this deployment
  - name: 'python:3.9'
    id: 'generate-codes'
    entrypoint: python
    args:
      - 'scripts/marketing_code.py'
      - '--project'
      - '$PROJECT_ID'
      - '--action'
      - 'create-deployment'
      - '--context'
      - |
        {
          "commit_sha": "$COMMIT_SHA",
          "build_id": "$BUILD_ID",
          "environment": "production",
          "features": ["marketing-code-display"],
          "donor_funded_features": [],
          "trigger_type": "$_TRIGGER_TYPE",
          "branch": "$BRANCH_NAME"
        }
    env:
      - 'PYTHONPATH=/workspace'

  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/yourl-cloud:$COMMIT_SHA', '.']
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push'
    args: ['push', 'gcr.io/$PROJECT_ID/yourl-cloud:$COMMIT_SHA']
  
  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'yourl-cloud'
      - '--image'
      - 'gcr.io/$PROJECT_ID/yourl-cloud:$COMMIT_SHA'
      - '--service-account'
      - 'automation-sa-yourl@$PROJECT_ID.iam.gserviceaccount.com'
      - '--region'
      - 'us-west1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--min-instances'
      - '1'
      - '--set-env-vars'
      - 'GOOGLE_CLOUD_PROJECT=$PROJECT_ID'

  # Generate audit report
  - name: 'python:3.9'
    id: 'audit-report'
    entrypoint: python
    args:
      - 'scripts/marketing_code.py'
      - '--project'
      - '$PROJECT_ID'
      - '--action'
      - 'audit'
    env:
      - 'PYTHONPATH=/workspace'

  # Send deployment notification
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'notify'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Get current marketing codes
        export CURRENT_CODE=$(python scripts/marketing_code.py --project $PROJECT_ID --action get-current | grep "Current public code" | cut -d: -f2 | tr -d ' ')
        export NEXT_CODE=$(python scripts/marketing_code.py --project $PROJECT_ID --action get-current | grep "Next public code" | cut -d: -f2 | tr -d ' ')
        
        echo "Sending notification to $NOTIFICATION_EMAIL"
        gcloud functions call sendBuildNotification \
          --region us-west1 \
          --data '{
            "to": "'$$NOTIFICATION_EMAIL'",
            "message": {
              "subject": "Yourl.Cloud Deployment Status: '$$COMMIT_SHA'",
              "body": {
                "text": "Deployment Status: Success\nCommit: '$$COMMIT_SHA'\nBuild ID: '$$BUILD_ID'\nCurrent Marketing Code: '$CURRENT_CODE'\nNext Marketing Code: '$NEXT_CODE'\n\nView build details: https://console.cloud.google.com/cloud-build/builds;region=global/'$$BUILD_ID'?project='$$PROJECT_ID'"
              }
            }
          }'

  # Update GitHub status with marketing codes
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'github-status'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Get current marketing codes
        export CURRENT_CODE=$(python scripts/marketing_code.py --project $PROJECT_ID --action get-current | grep "Current public code" | cut -d: -f2 | tr -d ' ')
        export NEXT_CODE=$(python scripts/marketing_code.py --project $PROJECT_ID --action get-current | grep "Next public code" | cut -d: -f2 | tr -d ' ')
        
        curl -X POST \
          -H "Authorization: token $$GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/$$REPO_OWNER/$$REPO_NAME/statuses/$$COMMIT_SHA \
          -d '{
            "state": "success",
            "target_url": "https://console.cloud.google.com/cloud-build/builds;region=global/$$BUILD_ID?project=$$PROJECT_ID",
            "description": "Deployment successful - Marketing Code: '$NEXT_CODE'",
            "context": "yourl-cloud/deployment"
          }'

images:
  - 'gcr.io/$PROJECT_ID/yourl-cloud:$COMMIT_SHA'

# Timeout for the entire build process
timeout: '1800s'

# Tags for build identification
tags:
  - 'yourl-cloud'
  - '$COMMIT_SHA'
  - '$BRANCH_NAME'