# Service account to use for builds
serviceAccount: 'projects/$PROJECT_ID/serviceAccounts/automation-sa-yourl@$PROJECT_ID.iam.gserviceaccount.com'

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  env:
    - 'GOOGLE_CLOUD_PROJECT=$PROJECT_ID'

# Substitutions
substitutions:
  _DEPLOY_REGION: 'us-west1'

steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build'
    args: ['build', '-t', 'us-west1-docker.pkg.dev/$PROJECT_ID/yourl-app/yourl-app:latest', '.']
  
  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push'
    args: ['push', 'us-west1-docker.pkg.dev/$PROJECT_ID/yourl-app/yourl-app:latest']
  
  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'yourl-cloud'
      - '--image'
      - 'us-west1-docker.pkg.dev/$PROJECT_ID/yourl-app/yourl-app:latest'
      - '--service-account'
      - 'automation-sa-yourl@$PROJECT_ID.iam.gserviceaccount.com'
      - '--region'
      - '${_DEPLOY_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--min-instances'
      - '1'
      - '--set-env-vars'
      - 'GOOGLE_CLOUD_PROJECT=yourl-cloud'

  # Update live experience code after successful deployment
  - name: 'python:3.9'
    id: 'update-live-code'
    entrypoint: python
    args:
      - 'scripts/update_live_code.py'
      - '--action'
      - 'update'
    env:
      - 'PYTHONPATH=/workspace'
      - 'GOOGLE_CLOUD_PROJECT=$PROJECT_ID'

images:
  - 'us-west1-docker.pkg.dev/$PROJECT_ID/yourl-app/yourl-app:latest'

# Timeout for the entire build process
timeout: '1800s'

# Tags for build identification
tags:
  - 'yourl-cloud'
  - '$COMMIT_SHA'
  - '$BRANCH_NAME'